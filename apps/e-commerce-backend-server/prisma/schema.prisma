datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Order {
  createdAt   DateTime         @default(now())
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  orderDate   DateTime?
  orderItems  OrderItem[]
  status      EnumOrderStatus?
  totalAmount Float?
  updatedAt   DateTime         @updatedAt
  user        User?            @relation(fields: [userId], references: [id])
  userId      String?          @db.ObjectId
}

model Product {
  cartItems   CartItem[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  String?     @db.ObjectId
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  orderItems  OrderItem[]
  price       Float?
  stock       Int?
  updatedAt   DateTime    @updatedAt
}

model Category {
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  products    Product[]
  updatedAt   DateTime  @updatedAt
}

model Cart {
  cartItems CartItem[]
  createdAt DateTime   @default(now())
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime   @updatedAt
  user      User?      @relation(fields: [userId], references: [id])
  userId    String?    @db.ObjectId
}

model CartItem {
  cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    String?  @db.ObjectId
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
  quantity  Int?
  updatedAt DateTime @updatedAt
}

model OrderItem {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?  @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
  quantity  Int?
  updatedAt DateTime @updatedAt
}

model User {
  address   String?
  carts     Cart[]
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  orders    Order[]
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

enum EnumOrderStatus {
  Option1
}
